#pragma once
#include <iostream>
#include <array>
#include <random>
#include <cmath>
#include <functional>
#include <stdexcept>

template<typename Scalar>
using activationFunction = void(*)(Scalar&, Scalar, Scalar);


//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\// 


template<typename Scalar, int output_size>
void Dense(Scalar* outputs, const Scalar* inputs, const Scalar* weights, const Scalar* biases, int input_size, activationFunction<Scalar> activation_function, Scalar alpha) noexcept {
    for(int i = 0; i < output_size; ++i){
        Scalar sum = 0;
        for(int j = 0; j < input_size; ++j){
            sum += inputs[j] * weights[j * output_size + i];
        }
        sum += biases[i];
        activation_function(outputs[i], sum, alpha);
    }
}

template <typename Scalar, int size>
void BatchNormalization(Scalar *outputs, const Scalar *inputs, const Scalar *gamma, const Scalar *beta, const Scalar *mean, const Scalar *variance, const Scalar epsilon) noexcept
{
    for (int i = 0; i < size; ++i)
    {
        outputs[i] = gamma[i] * ((inputs[i] - mean[i]) / std::sqrt(variance[i] + epsilon)) + beta[i];
    }
}

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\// 


template <typename Scalar = double>
auto dense5(const std::array<Scalar, 3>& initial_input) {

    constexpr int flat_size = 3; 
    std::array<Scalar, flat_size> model_input;
    int idx = 0;
        for (int i=0; i<flat_size; i++) { model_input[i] = initial_input[i]; }
    constexpr std::array<Scalar, 3> input_norms = {9.859801248e-01, 9.792372050e-01, 9.852146633e-01};

    constexpr std::array<Scalar, 3> input_mins = {3.083498694e-03, 1.103722129e-02, 6.335799082e-03};

    // std::array<Scalar, 3> model_input;

    for (int i = 0; i < 3; i++) {
        model_input[i] = (initial_input[i] - input_mins[i]) / (input_norms[i]);
    }

    if (model_input.size() != 3) { throw std::invalid_argument("Invalid input size. Expected size: 3"); }



//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\// 


    // Dense layer 1
    constexpr std::array<Scalar, 48> weights_1 = {-1.155083254e-01, 7.681995630e-02, -4.221550822e-01, -4.590183496e-01, -1.935123503e-01, -1.516266018e-01, -3.506982923e-01, 2.315728366e-01, -4.920738935e-02, 3.771526814e-01, -1.841464490e-01, -5.019859076e-01, 1.652627289e-01, 1.876218766e-01, -3.332899511e-02, -4.463953078e-01, 1.605587453e-01, -1.394398063e-01, -4.505418539e-01, 1.648505218e-02, -4.651585817e-01, 4.436356425e-01, -3.767757416e-01, 3.205865324e-01, -3.043961525e-02, 1.378570870e-02, -1.037795097e-01, -1.408521533e-01, -2.356524952e-02, -4.118356407e-01, 8.104284853e-02, -3.233060241e-02, -4.558440447e-01, 8.396115154e-02, -2.562051713e-01, 3.112629354e-01, 3.582561910e-01, -2.483307868e-01, 2.520316243e-01, -5.458247662e-01, -4.213466346e-01, -2.461349964e-01, 5.733001232e-02, -4.650996923e-01, 1.610036939e-02, 4.580244422e-01, -5.722424984e-01, 1.549978703e-01};
    constexpr std::array<Scalar, 16> biases_1 = {-3.254072368e-02, 2.226708457e-02, 0.000000000e+00, -7.731058169e-03, -9.824118018e-02, 1.531352848e-01, -4.123892635e-02, 2.551621757e-02, 0.000000000e+00, -9.264928102e-02, -1.955940574e-02, 0.000000000e+00, 8.672472090e-02, 4.417223111e-02, -5.340786651e-02, -6.545477360e-02};

    // Layer 3: Normalization
    constexpr std::array<Scalar, 16> gamma_3 = {9.937698841e-01, 8.931200504e-01, 1.000000000e+00, 7.801446319e-01, 9.975490570e-01, 7.984594703e-01, 9.731776118e-01, 7.773338556e-01, 1.000000000e+00, 7.875483632e-01, 9.861989021e-01, 1.000000000e+00, 7.737393379e-01, 7.483311892e-01, 9.603980184e-01, 1.109996796e+00};
    constexpr std::array<Scalar, 16> beta_3 = {-1.884820685e-02, -8.268956840e-02, 8.112157881e-02, 8.048579842e-02, 2.806307748e-02, -5.599963292e-02, -4.433183745e-02, -1.779960468e-02, 2.199213207e-02, 4.790150374e-02, -1.397487074e-01, -3.651921079e-02, 1.211358421e-02, -2.751539275e-02, 3.719092533e-02, 1.204960421e-02};
    constexpr std::array<Scalar, 16> mean_3 = {1.094685402e-03, 4.647591338e-02, 0.000000000e+00, 3.725987300e-02, 3.988050390e-03, 1.854558289e-01, 1.533971517e-03, 1.022827178e-01, 0.000000000e+00, 5.166926235e-02, 9.813228722e-22, 0.000000000e+00, 1.735073626e-01, 1.934392899e-01, 1.934013785e-17, 8.635917329e-04};
    constexpr std::array<Scalar, 16> variance_3 = {2.835933083e-05, 1.897408511e-03, 3.473716445e-18, 4.479466006e-03, 2.466939040e-04, 1.995838247e-02, 7.177695807e-05, 1.736433059e-02, 3.473716445e-18, 4.661442246e-03, 3.473739192e-18, 3.473716445e-18, 2.242126735e-03, 2.676586621e-02, 3.636652000e-18, 3.408600605e-05};
    constexpr Scalar epsilon_3 = 1.000000000e-03;

    // Dense layer 4
    constexpr std::array<Scalar, 512> weights_4 = {2.319373041e-01, -1.056606025e-01, -1.361669451e-01, -2.226232588e-01, 9.443273395e-02, 2.160362005e-01, 2.184159458e-01, 4.488070607e-01, 8.579088002e-02, 1.562090814e-01, 2.284800559e-01, 1.058999971e-01, -6.031563506e-02, -2.383351475e-01, 1.315785497e-01, 3.870885670e-01, -2.656234205e-01, 2.603591681e-01, -3.220063448e-01, -9.466844052e-02, 6.127117574e-02, -4.463797808e-02, -1.890697181e-01, -3.580162227e-01, 1.802995950e-01, -2.545170784e-01, 6.894809008e-02, -9.866783023e-02, 2.895327657e-02, 2.027205527e-01, -2.625463009e-01, 2.567637265e-01, -1.583428085e-01, 1.827876717e-01, 1.910487115e-01, 1.702350080e-01, -2.025199682e-01, -1.488711685e-01, 2.569135129e-01, -2.198668867e-01, 1.173870522e-03, 1.888661683e-01, 5.666575953e-02, -9.876694530e-02, 2.229755223e-01, -2.657450549e-02, -2.711842358e-01, -1.190814376e-02, 1.110968068e-01, 2.602137625e-03, 3.417803645e-01, -3.963594884e-02, 1.062924713e-01, -1.659258902e-01, 1.528602093e-01, -1.675074995e-01, 4.209387302e-02, -1.078054123e-02, -1.482590586e-01, -1.893548220e-01, -1.655232161e-01, 9.867620468e-02, 1.593813747e-01, 2.666241825e-01, 2.558416724e-01, 4.273337778e-03, -4.530306440e-03, 1.415826231e-01, -5.030742288e-01, 1.813077033e-01, 6.428541243e-02, -1.164304763e-01, -2.977062464e-01, 4.368029907e-02, -1.908167154e-01, -2.447825521e-01, -3.605335057e-01, 2.835274339e-01, -1.817445755e-01, -3.889310360e-02, -3.263994455e-01, -3.438911438e-01, -1.279694289e-01, -2.481543124e-01, -3.880105019e-01, 1.230033189e-01, -1.265381575e-01, -1.869507730e-01, -2.583168149e-01, -1.564260013e-02, -2.582120895e-01, -1.463307142e-01, -4.448903501e-01, -1.858513206e-01, 1.988127977e-01, -1.978259981e-01, -2.098508477e-01, -2.065044791e-01, -1.099638119e-01, 6.555151939e-02, -1.604680717e-01, -7.764662057e-02, 3.030838212e-03, -2.261589020e-01, 4.606309533e-02, 2.227782756e-01, -9.702304751e-02, -1.979010850e-01, -8.612698317e-02, -3.266966343e-01, 1.140412092e-01, -1.051591411e-01, 5.482570082e-02, -1.395869702e-01, -1.019733474e-01, -3.574367762e-01, 9.278916754e-03, -4.986285791e-02, 4.845022410e-02, 1.563526690e-01, 2.364293039e-01, -7.727181166e-02, 6.378501654e-02, 2.782144547e-01, -3.612318262e-02, -2.168354113e-03, -7.681988180e-02, 4.560457543e-02, 9.988232702e-02, 2.280701846e-01, -6.859417260e-02, -2.441385388e-01, 1.643455178e-01, 1.644230634e-01, -1.346336901e-01, -5.351575464e-02, 1.820139438e-01, -2.501829267e-01, -4.944072291e-02, 8.787927777e-02, 2.820843756e-01, 1.222017258e-01, -4.583080113e-02, -9.610176086e-02, -1.190047041e-01, -4.318152368e-02, 1.156051159e-01, 2.972379625e-01, -2.287573069e-01, 1.045102552e-01, 1.125630140e-01, -1.105637625e-01, 1.920803217e-03, -2.237601131e-01, 7.997436076e-02, -9.543867782e-03, -4.774522036e-02, 1.703215837e-01, -7.211716473e-02, 1.839942485e-02, -6.922145933e-02, 1.158554181e-01, -3.820559382e-02, -5.452996586e-03, -1.204478219e-01, -5.122322589e-02, -1.475386322e-01, 2.020401806e-01, -2.502239048e-01, 2.125716358e-01, 3.514812589e-01, -3.384157121e-01, -5.221753567e-02, 1.863050163e-01, 1.171260625e-01, -1.112631038e-01, -1.506391168e-01, -1.824917644e-01, 2.708236575e-01, 1.793831289e-01, -3.201156557e-01, 1.423413903e-01, -2.020192742e-01, -1.153962910e-01, -4.440955445e-02, 4.238586128e-02, 1.156560481e-01, -4.307620972e-02, -1.062939037e-02, 4.827068746e-02, 2.447788417e-01, 1.008543894e-01, -7.361872494e-02, -2.880160697e-02, 2.148895115e-01, 1.316998005e-01, 1.232765242e-01, -3.102141917e-01, 1.804890782e-01, 2.417546809e-01, -4.294449389e-01, 1.411443949e-01, -2.697639633e-03, -1.394964457e-01, -3.320298493e-01, -2.409615368e-01, 4.589793682e-01, 2.254564613e-01, 1.023419723e-01, -2.431722730e-01, -2.918383852e-02, 7.941973209e-02, -8.920194954e-02, 4.057367891e-02, -1.824138761e-01, -1.229077131e-01, -1.578452736e-01, 3.646743000e-01, 2.234424651e-01, 1.115935110e-02, -5.611980706e-02, -4.283444583e-01, 2.616794109e-01, 8.905485272e-02, -2.772415876e-01, -3.658876196e-02, 1.647900417e-02, 1.308204085e-01, -2.885219269e-02, -1.189351678e-01, 2.829182148e-01, -2.287705094e-01, 1.269488335e-01, -1.236441061e-01, -2.057090402e-01, 1.077653989e-01, -4.485426098e-02, -9.275896102e-02, 1.294978559e-01, -3.054549098e-01, 3.113918900e-01, -1.406685114e-01, 9.781953879e-03, -1.762904823e-01, 1.013312396e-02, 1.543161124e-01, 2.951123193e-02, 7.011637092e-02, 1.706466377e-01, 3.490890935e-02, 3.767798096e-02, 2.797359526e-01, -2.629221678e-01, -1.759276539e-01, 2.223742567e-02, -9.133604169e-02, 2.856907248e-01, 1.376942247e-01, 1.051439643e-01, -2.057199031e-01, 6.148061901e-02, 8.618696779e-02, -4.157023728e-01, -3.659885526e-01, 2.620211244e-01, -3.043515682e-01, 1.322558150e-02, -5.708181486e-02, -6.733374298e-02, -1.668214947e-01, 1.416132003e-01, 2.052073777e-01, -4.271635711e-01, -8.492476307e-03, 1.712694466e-01, -4.148839414e-01, -6.044703349e-02, 5.995604768e-02, -1.609445959e-01, -4.573171437e-01, -2.393098176e-01, -5.097441673e-01, 1.039759144e-01, 7.602564991e-02, -1.446455568e-01, 3.389487565e-01, -2.242992371e-01, 7.935591787e-02, 5.248897523e-02, 7.058754563e-02, -3.067952096e-01, 2.574502118e-02, 7.641083747e-02, -1.356935129e-02, -8.095438033e-02, -3.828084841e-02, 5.460405722e-02, 6.365860254e-02, 9.598609060e-02, -3.471296430e-01, -4.293758050e-02, -6.428278238e-02, -2.044014037e-01, 1.962617487e-01, -1.250952482e-01, 2.672856152e-01, 1.783642359e-02, -2.869500779e-02, -1.137729660e-01, -2.554629147e-01, 2.112334222e-02, 4.875882342e-02, -1.600631177e-01, -1.437437385e-01, 1.620455384e-01, -7.077927887e-02, 1.685506999e-01, 2.091948986e-01, 5.865204334e-02, 1.421719790e-01, 4.419643879e-01, 3.297734261e-01, 1.065283716e-01, 1.879430860e-01, -1.541009247e-01, 2.309958190e-01, 1.100885868e-01, 1.172921434e-02, 5.763064325e-02, -7.196156681e-02, 2.689670920e-01, 3.302753568e-01, 7.885342836e-02, 3.503162265e-01, -1.012006402e-01, 3.362376988e-01, 1.710332185e-01, 2.675704360e-01, 3.186642006e-02, 2.785874307e-01, 3.399049044e-01, 5.387303978e-02, 3.865318894e-01, 1.040893719e-01, -7.203383744e-02, -8.918891847e-02, 2.651522756e-01, -3.417008324e-03, 2.699908912e-01, 4.722423851e-01, -1.240288839e-01, 2.996122241e-01, 2.827392220e-01, -8.582426235e-04, 1.186972782e-01, -1.077109501e-01, 1.144390628e-01, -2.834815979e-01, 2.161122561e-01, -3.806283772e-01, 2.832320035e-01, 1.628605425e-01, 1.098098047e-02, -4.092660546e-01, 3.732000291e-01, -6.740307808e-02, 1.058193371e-01, -2.151091099e-01, -3.294062987e-02, -1.854010373e-01, 1.666161418e-02, -1.715011150e-01, -2.126797885e-01, 2.075474411e-01, 6.678904593e-02, -3.427903056e-01, -1.592206508e-01, 8.208866231e-03, 2.185554355e-01, -3.685769737e-01, -2.640834451e-01, 7.608033717e-02, -1.032006517e-01, -4.707080126e-01, -1.356009860e-02, -1.824177504e-01, 1.795236915e-01, -2.391875386e-01, 5.812934414e-02, -1.497925222e-01, -5.830365792e-02, 1.140538529e-01, -1.229009628e-01, -3.150583059e-02, 7.315198891e-03, 1.978746057e-01, 8.605115861e-02, -2.991332114e-01, 3.390409648e-01, -3.582193553e-01, -3.003922403e-01, -2.377952039e-01, -2.490813732e-01, 3.275720775e-02, -1.559892893e-01, 2.377662808e-01, 5.788117182e-03, 3.149086237e-02, 2.735095322e-01, -1.333434433e-01, 2.066845745e-01, 3.113502860e-01, -1.324077696e-02, -1.457429677e-01, -9.969550371e-02, -4.220525920e-02, -1.263265759e-01, 6.845671684e-02, -2.550367415e-01, 2.587838471e-02, 1.466472447e-01, 1.428851187e-01, -1.645374149e-01, 2.709769011e-01, -1.618116349e-01, -1.074038893e-01, 2.039300352e-01, -2.151963860e-01, -2.624057233e-01, 2.300961018e-01, 2.060843706e-01, -7.948203385e-02, 9.927134961e-02, 2.504495205e-03, 7.181271911e-02, 1.049964577e-01, -1.387038678e-01, 1.334116012e-01, -2.736604214e-01, -5.298202485e-02, 2.043258399e-03, 3.287431896e-01, 1.693486720e-01, 2.900732458e-01, 3.065983765e-02, -8.957675891e-04, 1.380249709e-01, -1.451164931e-01, -3.752763569e-01, 6.997893006e-02, -1.782015711e-01, 9.926369786e-02, -2.550983131e-01, -1.385226846e-01, 2.736555040e-01, -1.065619886e-01, -1.747612655e-01, -1.075338200e-01, 1.854235083e-01, -1.193830837e-02, 2.231130302e-01, -1.910873652e-01, -2.862342298e-01, -1.745037585e-01, 1.948773116e-01, 1.995732933e-01, -3.762784898e-01, 1.868337393e-01, 1.508036256e-01, -1.083087400e-01, -2.019585222e-01, 1.513280571e-01, 1.913073659e-02, -2.062802464e-01, 1.465789527e-01, -1.097751111e-01, -1.417275816e-01, 1.497318745e-01, -1.541587263e-01, -7.443498820e-02, 5.439481884e-02, 1.789699346e-01, -2.600998282e-01, -1.664407104e-01, 3.286596239e-01, 9.406890720e-03, 3.339959681e-01, -1.184494495e-01, 7.434353977e-02, -1.216257811e-01, 2.440487891e-01, 2.371952087e-01, -2.743307129e-02, 1.412285268e-01, -3.577965796e-01, -3.406761885e-01, -4.173857868e-01, 4.905325361e-03, 1.162495390e-01, 1.149374843e-01, -2.457449734e-01, -3.665658087e-02, 4.728819132e-01, -7.829128951e-02, 3.318597749e-02, -2.060770243e-01, -9.765308350e-02, 8.287565410e-02, -1.752706319e-01, 2.036871761e-01, -1.391079426e-01, 1.611641794e-01};
    constexpr std::array<Scalar, 32> biases_4 = {-3.108047508e-02, -6.927169114e-02, -1.725624315e-02, -3.553784266e-02, -1.212060750e-01, -6.440515816e-02, -7.473606616e-02, -2.613885701e-02, -8.258506656e-03, -5.756697059e-02, 7.034187205e-03, -2.681095712e-02, -6.826952100e-02, -3.506963328e-02, -6.453654170e-02, -5.874254182e-02, -3.148844838e-02, -4.208133742e-02, -3.322367370e-02, -8.669561148e-02, -8.248474449e-02, -6.455408782e-02, -4.583210498e-02, -9.596197307e-02, -1.020438224e-01, -6.347180158e-02, -1.091708168e-01, -7.507505268e-02, -8.049879223e-02, -2.622283250e-02, -5.084678903e-02, -3.405182436e-02};

    // Dense layer 7
    constexpr std::array<Scalar, 512> weights_7 = {-3.362931907e-01, 2.514139414e-01, -1.424452476e-02, 1.145810112e-01, 4.659906775e-02, -2.831792235e-01, -2.099018991e-01, -8.057673275e-02, -3.622679710e-01, -1.498206798e-02, -2.783623636e-01, -1.350144744e-01, -8.467600495e-02, -3.500880301e-02, 1.097614691e-01, 2.907859683e-01, -2.431308627e-01, 4.415669665e-02, -8.418364823e-02, 5.448259879e-03, -2.028857023e-01, -1.453718543e-01, 7.385595888e-02, -5.910518393e-02, -7.535360008e-02, 2.200505883e-01, 1.556551158e-01, 1.106616706e-01, 2.469805814e-02, -2.365734614e-02, -2.508562990e-02, -3.590252623e-02, -1.902117580e-01, -1.484777778e-01, 4.430084229e-01, 2.755615115e-01, 3.208710253e-01, 3.593843430e-02, 2.139629722e-01, -1.263996363e-01, -2.640379965e-01, 3.226890266e-01, 6.922928244e-02, -1.049619988e-01, -1.597468555e-01, -5.704841763e-02, -1.498729736e-01, -1.794856042e-01, 2.262710035e-01, -1.663130820e-01, 2.257875353e-01, -9.824227542e-02, -3.186096847e-01, -3.925304711e-01, 2.462695390e-01, -1.651910990e-01, 2.710514963e-01, -1.281473786e-01, 1.130205020e-01, 3.150231540e-01, -4.561712593e-02, 1.183147654e-01, 2.416255325e-01, -1.410174668e-01, -2.168046683e-01, -8.919784427e-02, -1.630078107e-01, 1.007021293e-01, 1.194715202e-01, -9.971772879e-02, -1.478974223e-01, -2.215894908e-01, -1.314495057e-01, 1.133708730e-01, 2.942361683e-02, 1.105499566e-01, 1.245442629e-01, 3.649226949e-02, 5.435183644e-02, -4.401617870e-02, 1.395448893e-01, 3.020094335e-01, -1.074034274e-01, -2.344908118e-01, -1.209167838e-01, -1.001905873e-01, -5.882793292e-02, 2.978801131e-01, -2.993830740e-01, 1.768353730e-01, -1.854525357e-01, 2.180655301e-01, -2.011183351e-01, -3.641631082e-02, -1.545005850e-02, 9.069588780e-02, -1.910667419e-01, 2.101078928e-01, -1.910340190e-01, -1.371013820e-01, 9.533669800e-02, -2.620713972e-02, -4.671479762e-01, -5.694872513e-02, 5.064654723e-02, 1.117175967e-01, -1.700278670e-01, -1.244878173e-01, -1.947487742e-01, 3.454695642e-01, -2.432228327e-01, -1.280368268e-01, 1.794583797e-01, 8.851679415e-02, 2.878150344e-01, 4.891834036e-02, 8.893094212e-02, 6.208106503e-02, -2.861291170e-01, 2.066808939e-01, 2.856491134e-02, -9.430319816e-02, -8.700498939e-02, -1.113980636e-01, -1.216825005e-02, -1.035537720e-01, -1.170154586e-01, -1.915261447e-01, -1.660548151e-01, 3.025954030e-02, 1.141599342e-01, 1.331554800e-01, 2.206429094e-01, -1.848846674e-01, -4.530452564e-02, 1.232341304e-01, -3.733780980e-02, -1.215462834e-01, -4.517503679e-01, -2.477725297e-01, -1.855858713e-01, -3.543835282e-01, 1.036293730e-01, -1.652540416e-01, -8.046646416e-02, -1.058395877e-01, -3.372136131e-02, 9.347059578e-02, 1.140893102e-01, -5.898185447e-02, 1.075973287e-01, -1.298541427e-01, 4.852411896e-02, 2.034483850e-01, 2.432056963e-01, -1.559437066e-01, 1.048205197e-01, -5.121776462e-02, 3.167684376e-01, 1.961956732e-02, -1.339600831e-01, -1.915591024e-02, 2.371703237e-01, -1.298493296e-01, 1.381110400e-02, -1.248466596e-01, -1.489550620e-01, -1.726639718e-01, 1.492767483e-01, 6.478139013e-02, -6.763890851e-03, -2.169533968e-01, 2.393509448e-01, -2.588797510e-01, 1.078938842e-01, -2.776997387e-01, 6.440944970e-02, -2.994064391e-01, 3.332887292e-01, -2.376888394e-01, 2.466296032e-02, 1.867843717e-01, 7.466837019e-02, 8.321159333e-02, 2.111444473e-01, 3.032846749e-01, -1.733258218e-01, -1.359146833e-01, -2.581071854e-01, -2.033537626e-01, -1.179353893e-01, 2.530757785e-01, 9.641639888e-02, -8.769609034e-02, -2.496547252e-01, 2.401262522e-01, -2.356240749e-01, 4.829866812e-02, 1.392721832e-01, 3.514583036e-02, -1.060305238e-01, 3.898012638e-01, -2.217882425e-01, 4.467664286e-02, -1.419596025e-03, -2.954614162e-01, -2.414464504e-01, -2.482593209e-01, -2.495087236e-01, -1.666973829e-01, 5.819780752e-02, -2.552448958e-02, -2.494958341e-01, -1.670733243e-01, -3.849628568e-02, -9.269011021e-02, -6.083259359e-02, -6.065950543e-02, -2.639137208e-01, 1.430183090e-02, -2.465309016e-02, -1.177878585e-02, -7.898817211e-02, 2.882258892e-01, 3.232013285e-01, -2.926123515e-02, 4.045775533e-02, -1.691242605e-01, 1.932850331e-01, -1.887672693e-01, 8.632960171e-02, -3.337398171e-01, 2.464662045e-01, -3.040430546e-01, 2.822447419e-01, -3.515917957e-01, -1.694080085e-01, 2.179965228e-01, -1.511604637e-01, 1.159829721e-01, 2.850154340e-01, -1.371891145e-02, -1.565791667e-01, 1.582860202e-01, -1.638261974e-02, 1.048930809e-01, 1.851642281e-01, -1.187158823e-01, -1.179154590e-01, -4.678735137e-01, -1.966642737e-01, -8.852189034e-02, -8.339799196e-02, 3.018247783e-01, 2.650992870e-01, 4.553528726e-01, 8.929995447e-02, -6.171104312e-02, 3.196554780e-01, 1.058172435e-02, 1.321939975e-01, -5.733281747e-02, -8.653656696e-04, -1.365187466e-01, 2.414573133e-01, -2.078969777e-01, -4.004595578e-01, 1.673499048e-01, 1.956157833e-01, 1.603735834e-01, 1.463762391e-02, -5.375648290e-02, 4.626039043e-02, 3.094223440e-01, -7.732020319e-02, -1.148858964e-01, 3.569228202e-02, -5.693140253e-02, -5.917796865e-02, -2.759245634e-01, 6.402651966e-02, -9.503924102e-02, 1.304044425e-01, 1.712123603e-01, -1.619878709e-01, -3.248839080e-01, -1.668936163e-01, 2.380143553e-01, -3.188727796e-01, 2.302294225e-01, -2.879263461e-01, -2.391221672e-01, -3.840837777e-01, -3.443510830e-01, 7.294735312e-02, -1.000683233e-01, -2.652106993e-02, 1.818414330e-01, -1.680091619e-01, 1.824901104e-01, 1.853542328e-01, 4.424882680e-02, 2.610737979e-01, 5.297966674e-02, -5.767915398e-02, 1.194417402e-01, -1.206263378e-01, 4.217993468e-02, -1.496028006e-01, -1.682166457e-01, 3.492328525e-02, 4.496027529e-02, 1.666191667e-01, 1.822263151e-01, -1.097977161e-01, -7.795850933e-02, 1.581246257e-01, -1.630895883e-01, -2.089116126e-01, -6.199967861e-02, 1.232235581e-01, 2.265661806e-01, -3.366062790e-02, 1.550287008e-01, 3.146141171e-01, -6.684080511e-02, 2.174262106e-01, -1.314625889e-01, -1.391236484e-01, 3.741987795e-02, 1.002998427e-01, 5.295106173e-01, 2.443401963e-01, 1.262722909e-01, -7.619293034e-02, -6.483737379e-02, -2.361175604e-02, 1.598429680e-01, 1.108762920e-01, 9.622468054e-02, 5.642070621e-02, -1.334681213e-01, -6.300733238e-02, 2.812069841e-02, 9.099686146e-02, 5.436937883e-02, -1.270024925e-01, -1.903486401e-01, -1.278151274e-01, 1.641001254e-01, 1.164516434e-01, 3.895955905e-02, -3.935547546e-02, -1.484720409e-01, 2.930602990e-03, -3.416645899e-02, -3.070409894e-01, 2.189693451e-01, -3.064792156e-01, 4.129894450e-02, 1.321658939e-01, -1.133336350e-01, -1.447079182e-01, 7.182282954e-02, -1.543374211e-01, -9.732368588e-02, -2.184698135e-01, -4.280942306e-02, 8.094789833e-02, 1.708887666e-01, 5.963874236e-02, 1.783450842e-01, 1.559125483e-01, -3.011690676e-01, 4.655329883e-01, -3.011682816e-02, -1.825831980e-01, 1.442331076e-01, -2.285350673e-02, 4.976941273e-02, 1.233552471e-01, 1.577039808e-01, -5.759800225e-02, 2.340741083e-02, 1.792962402e-01, -2.064418746e-03, 7.771418244e-02, -2.675293088e-01, 2.315774262e-01, 9.700542688e-02, -6.261638552e-02, 3.023698032e-01, 1.169426143e-01, -2.528911233e-01, -2.513343096e-01, -2.077257186e-01, -2.290518023e-02, 1.203301996e-01, 1.007814854e-01, -2.322262079e-01, 4.394420236e-02, 3.839113563e-02, -2.442601472e-01, -1.669785827e-01, 2.775197923e-01, 1.527389735e-01, 2.395534962e-01, 9.305771440e-02, 2.667900622e-01, -5.988729186e-03, -6.010101363e-02, -5.793398619e-02, 4.110084102e-02, 2.757831812e-01, -1.724994183e-01, 1.341326088e-01, 9.987486899e-02, 2.171882689e-01, 7.678152621e-02, -1.044521853e-01, -4.656642675e-02, 1.391253024e-01, 8.547940850e-02, -6.753236055e-03, -1.545311213e-01, 2.402696013e-02, -6.122184172e-02, 5.568648875e-02, 1.785147041e-01, -6.574176252e-02, -1.763517559e-01, 1.073393896e-01, -2.091295570e-01, 8.388949186e-02, 4.482035339e-02, 6.117646769e-02, 2.056196332e-01, -2.008901387e-01, -1.848065853e-01, 1.611442864e-01, -2.224804610e-01, -1.635556966e-01, -1.882698387e-01, 1.234066337e-01, -8.735664189e-03, 2.144254372e-02, -4.219260439e-02, 3.103229403e-01, 2.414898574e-01, -2.560686879e-02, -3.079881333e-02, 1.231896207e-01, 2.361552864e-01, 8.511623740e-02, -2.173343450e-01, 1.609035283e-01, -1.774960607e-01, 2.109645605e-01, 2.312223017e-01, 5.808067322e-02, -1.673601121e-01, -2.809854448e-01, 2.302248627e-01, -1.447732598e-01, -1.589466631e-01, -2.210301459e-01, 1.687576324e-01, 9.762434661e-02, -2.534438670e-01, -4.201443121e-02, -2.267658263e-01, -2.107395828e-01, -6.237135082e-02, -2.332943231e-01, -3.647750616e-02, -2.588418126e-01, -3.630578220e-01, -2.378560901e-01, 1.711236387e-01, -2.007759064e-01, -6.236315146e-02, -1.214628592e-01, -1.107537225e-01, -1.287369281e-01, 1.637446880e-01, -1.870497912e-01, 1.345261037e-01, 2.420974523e-02, -1.067823842e-01, -3.395359218e-01, -4.641134292e-02, 1.869241446e-01, -9.481806308e-02, 2.570054531e-01, 4.708020687e-01, 6.100191548e-02, -2.527093589e-01, -1.605597287e-01, 2.372560948e-01, 4.120493308e-02, -2.527430952e-01, 1.271531284e-01, -7.011345029e-02, -3.668599427e-01, 2.697287798e-01, -1.693767607e-01, 2.487760484e-01, -3.857208416e-02, -1.358194500e-01, 2.821035683e-01, -1.928884350e-02, -1.241824776e-01};
    constexpr std::array<Scalar, 16> biases_7 = {5.220439285e-02, 6.463745981e-02, -7.136581093e-02, 6.498815119e-02, -6.823615730e-02, -4.083802924e-02, -2.505300008e-02, -7.299636304e-02, 5.508447438e-02, 3.094006889e-02, -4.227533937e-03, 1.961357892e-02, -5.568024516e-02, -4.493762553e-02, 2.601851337e-02, -7.347927988e-02};

    // Dense layer 10
    constexpr std::array<Scalar, 160> weights_10 = {-2.471828647e-02, 1.038921252e-01, 3.748424649e-01, -3.326797113e-02, 1.789585054e-01, 4.004137516e-01, 3.311736584e-01, 1.259851605e-01, -2.320356667e-01, 1.061373502e-01, 1.276446786e-02, 4.015946388e-01, 2.628360689e-01, 2.007741183e-01, 1.933719069e-01, 2.218187302e-01, -7.373201102e-02, 3.106641471e-01, 3.298609331e-02, 1.957185715e-01, 1.425322145e-01, 4.886936769e-02, -2.683529854e-01, -2.608224750e-01, -1.015249342e-01, 8.253795654e-02, -3.158128858e-01, -4.269783795e-01, -3.517988324e-01, 1.835268140e-01, 8.287193626e-02, 1.443990618e-01, 1.516967565e-01, 2.460864782e-01, 1.678599715e-01, 2.879869342e-01, 2.527996600e-01, 2.786988616e-01, 8.927702904e-02, 1.251393855e-01, 4.149390757e-02, 2.563513815e-02, -3.587653488e-02, -2.500140369e-01, -1.579924226e-01, -1.128770187e-01, -5.843289942e-02, -3.946582675e-01, -4.376191497e-01, -2.067061812e-01, -1.516021639e-01, 4.383828118e-02, -2.300652415e-01, 1.271642894e-01, -2.433482409e-01, -9.887361526e-02, -7.880669087e-02, -2.245330960e-01, -2.868416607e-01, -3.480720520e-01, 2.226197273e-01, -3.513641059e-01, 2.561469078e-01, -4.120787382e-01, -1.549802423e-01, 9.059410542e-02, 9.445040673e-02, 1.021968052e-01, -1.340374053e-01, -2.050666511e-01, -5.337290466e-03, -1.435363889e-01, -2.146618664e-01, -3.967134655e-01, -1.120001450e-01, -3.363202512e-01, -2.284445018e-01, 4.394899681e-02, -3.642334342e-01, 6.294864416e-02, 1.439093947e-01, 8.054459095e-02, 3.018663824e-01, 3.216393292e-01, 3.122439981e-01, 1.346261948e-01, 7.982937247e-02, -2.020375133e-01, 3.158757091e-01, 3.105760552e-02, 3.161871433e-01, -2.904761434e-01, -9.584708512e-02, 1.477995366e-01, 2.242598087e-01, -1.330859214e-01, 3.749513328e-01, 7.409955561e-02, 2.811878361e-02, 9.954833984e-02, -4.167121649e-01, -4.064795673e-01, -3.717814758e-02, 1.216345802e-01, 2.656729817e-01, 1.603582650e-01, 7.614719868e-02, -2.813727558e-01, -1.574662030e-01, -4.305537045e-01, 1.020768434e-01, 2.485579103e-01, 3.416182399e-01, -9.630233049e-02, -3.203408718e-01, -2.049575150e-01, 3.142613471e-01, -1.009716988e-01, 3.598631322e-01, -3.608538210e-01, -2.268080264e-01, -2.259510010e-01, 1.335954815e-01, -3.198631704e-01, -7.060538232e-02, -2.677515745e-01, -1.966439933e-01, -2.485867403e-02, -1.577073634e-01, -1.158894673e-01, -2.882421017e-01, -1.063529775e-01, 2.260077149e-01, -2.317367047e-01, -1.171418577e-01, -2.254480273e-01, -1.638965756e-01, -1.872611940e-01, -6.117993593e-02, 3.298306093e-02, -6.310920417e-02, 3.427293384e-03, 2.848525047e-01, -2.202927619e-01, 1.686695069e-01, 3.943184018e-01, -2.834506705e-02, 2.880043723e-02, 2.788276374e-01, 1.156854033e-01, -3.685689569e-01, -1.449611187e-01, -4.708745703e-02, -2.040197998e-01, -4.522549212e-01, -5.412949249e-02, 2.242392451e-01, -2.385732532e-02, -1.576406807e-01, 1.140498519e-01};
    constexpr std::array<Scalar, 10> biases_10 = {4.208128750e-01, 4.312308729e-01, 4.011712670e-01, 3.957055509e-01, 3.713731766e-01, 4.392196238e-01, 3.902957737e-01, 3.841606379e-01, 3.389464319e-01, 4.098259807e-01};


//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\// 


    auto relu = +[](Scalar& output, Scalar input, Scalar alpha) noexcept {
        output = input > 0 ? input : 0;
    };

    auto elu = +[](Scalar& output, Scalar input, Scalar alpha) noexcept {
        output = input > 0 ? input : alpha * (std::exp(input) - 1);
    };

    auto linear = +[](Scalar& output, Scalar input, Scalar alpha) noexcept {
        output = input;
    };

    auto leakyrelu = +[](Scalar& output, Scalar input, Scalar alpha) noexcept {
        output = input > 0 ? input : alpha * input;
    };

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\// 

    std::array<Scalar, 16> layer_1_output;
    Dense<Scalar, 16>(
        layer_1_output.data(), model_input.data(),
        weights_1.data(), biases_1.data(),
        3, linear, 0.0);

    // Pure activation layer 2
    std::array<Scalar, 16> layer_2_output;
    for (int i = 0; i < 16; ++i) {
        relu(layer_2_output[i], layer_1_output[i], 0.0);
    }

    std::array<Scalar, 16> layer_3_output;
    BatchNormalization<Scalar, 16>(
        layer_3_output.data(), layer_2_output.data(),
        gamma_3.data(), beta_3.data(),
        mean_3.data(), variance_3.data(),
        epsilon_3);

    std::array<Scalar, 32> layer_4_output;
    Dense<Scalar, 32>(
        layer_4_output.data(), layer_3_output.data(),
        weights_4.data(), biases_4.data(),
        16, linear, 0.0);

    // Pure activation layer 5
    std::array<Scalar, 32> layer_5_output;
    for (int i = 0; i < 32; ++i) {
        leakyrelu(layer_5_output[i], layer_4_output[i], 0.2);
    }

    std::array<Scalar, 16> layer_7_output;
    Dense<Scalar, 16>(
        layer_7_output.data(), layer_5_output.data(),
        weights_7.data(), biases_7.data(),
        32, linear, 0.0);

    // Pure activation layer 8
    std::array<Scalar, 16> layer_8_output;
    for (int i = 0; i < 16; ++i) {
        elu(layer_8_output[i], layer_7_output[i], 1.0);
    }

    std::array<Scalar, 10> layer_10_output;
    Dense<Scalar, 10>(
        layer_10_output.data(), layer_8_output.data(),
        weights_10.data(), biases_10.data(),
        16, linear, 0.0);

    // final placeholder
    constexpr std::array<Scalar, 10> output_norms = {9.934309616e-01, 9.617949734e-01, 9.796113737e-01, 9.758307726e-01, 9.646616886e-01, 9.946274980e-01, 9.858196838e-01, 9.538358071e-01, 9.862610589e-01, 9.814134212e-01};
    constexpr std::array<Scalar, 10> output_mins = {1.280830518e-03, 3.093672333e-02, 1.008834337e-02, 1.829334318e-02, 1.811821693e-02, 3.327897599e-03, 1.416018130e-02, 1.323092537e-02, 2.370498897e-03, 5.197589451e-03};

    std::array<Scalar, 10> model_output;
    for (int i = 0; i < 10; i++) { model_output[i] = (layer_10_output[i] * output_norms[i]) + output_mins[i]; }
    return model_output;
}
